# NOTE: All relative paths are relative to the location of this file.

[pytype]

# Space-separated list of files or directories to exclude.
exclude =

# Space-separated list of files or directories to process.
inputs = ../../xcp ../../tests

# Keep going past errors to analyze as many files as possible.
keep_going = True

# Run N jobs in parallel. When 'auto' is used, this will be equivalent to the
# number of CPUs on the host system.
jobs = 4

# All pytype output goes here.
output = .pytype

# Platform (e.g., "linux", "win32") that the target code runs on.
platform = linux

# Paths to source code directories, separated by ':'.
# pythonpath = stubs

# Python version (major.minor) of the target code.
python_version = 3.10

# Enable parameter count checks for overriding methods. This flag is temporary
# and will be removed once this behavior is enabled by default.
overriding_parameter_count_checks = True

# Use the enum overlay for more precise enum checking. This flag is temporary
# and will be removed once this behavior is enabled by default.
# use_enum_overlay = True

# Variables initialized as None retain their None binding. This flag is
# temporary and will be removed once this behavior is enabled by default.
# strict_none_binding = True

# Opt-in: Do not allow Any as a return type.
# no_return_any = True

# Experimental: Infer precise return types even for invalid function calls.
#precise_return = True

# Experimental: Solve unknown types to label with structural types.
# protocols = True

# Experimental: Only load submodules that are explicitly imported.
# strict_import = False

# Experimental: Enable exhaustive checking of function parameter types.
#strict_parameter_checks = True

# Experimental: Emit errors for comparisons between incompatible primitive
# types.
#strict_primitive_comparisons = True

# Space-separated list of error names to ignore.
# disable = pyi-error

# Don't report errors.
#report_errors = True
